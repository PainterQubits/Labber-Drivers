# Instrument driver configuration file.

[General settings]

# The name is shown in all the configuration windows
name: Painter Agilent E5071C Network Analyzer

# The version string should be updated whenever changes are made to this config file
version: 1.2.0

# Name of folder containing the code defining a custom driver. Do not define this item
# or leave it blank for any standard driver based on the built-in VISA interface.
driver_path: Painter_Agilent_E5071C_NetworkAnalyzer

# default interface and address
interface: TCPIP


[Model and options]
# The option section allow instruments with different options to use the same driver

# List of models supported by this driver
model_str_1: E5071C

# Check instrument model id at startup (True or False). Default is False
check_model: True

# Valid model strings returned by the instrument. Default value = model_str
model_id_1: E5071C


# General VISA settings for the instrument.
[VISA settings]

# Enable or disable communication over the VISA protocol (True or False)
# If False, the driver will not perform any operations (unless there is a custom driver).
use_visa = True

# Reset the interface (not the instrument) at startup (True or False).  Default is False
reset: True

# Time (in seconds) before the timing out while waiting for an instrument response. Default is 5
timeout: 1000

# Query instrument errors (True or False).  If True, every command sent to the device will
# be followed by an error query.  This is useful when testing new setups, but may degrade
# performance by slowing down the instrument communication.
query_instr_errors: False

# Bit mask for checking status byte errors (default is 255, include all errors)
# The bits signal the following errors:
# 0: Operation
# 1: Request control
# 2: Query error
# 3: Device error
# 4: Execution error
# 5: Command error
# 6: User request
# 7: Power on
error_bit_mask: 255

# SCPI string to be used when querying for instrument error messages
error_cmd:

# Initialization commands are sent to the instrument when starting the driver
# *RST will reset the device, *CLS clears the interface
init: :INIT:CONT ON;:FORM:BORD NORM;

# Boolean string values (used for sending True/False to instrument), default is 1 and 0
str_true: ON
str_false: OFF

# Final commands sent to the instrument when closing the driver
final:


# Define quantities in sections. This list is a selection of allowed keywords,
# see the manual for a full list of options
#   datatype:      The datatype should be one of DOUBLE, BOOLEAN, COMBO,
#                  STRING, COMPLEX, VECTOR, VECTOR_COMPLEX, PATH or BUTTON.
#   unit:          Quantity unit
#   set_cmd:       Command used to send data to the instrument. Put <*> where the value should appear.
#   get_cmd:       Command used to get the data from the instrument. Default is set_cmd?
#   def_value:     Default value
#   low_lim:       Lowest allowable value.  Defaults to -INF
#   high_lim:      Highest allowable values.  Defaults to +INF
#   combo_def_1:   First option in a pull-down combo box. Only used when datatype=COMBO
#   combo_def_2:   Second option in a pull-down combo box. Only used when datatype=COMBO
#   ...
#   combo_def_n:   nth option in a pull-down combo box. Only used when datatype=COMBO
#   state_quant:   Quantity that determines this control's visibility
#   state_value_1: Value of "state_quant" for which the control is visible
#   state_value_2: Value of "state_quant" for which the control is visible
#   ...
#   state_value_n: Value of "state_quant" for which the control is visible
#   permission:    Sets read/writability, options are BOTH, READ, WRITE or NONE. Default is BOTH
#   group:         Name of the group where the control belongs.
#   section:       Name of the section where the control belongs.


[S11 - Enabled]
datatype: BOOLEAN
def_value: False
group: Signals

[S21 - Enabled]
datatype: BOOLEAN
def_value: False
group: Signals

[S12 - Enabled]
datatype: BOOLEAN
def_value: False
group: Signals

[S22 - Enabled]
datatype: BOOLEAN
def_value: False
group: Signals

[S11]
x_name: Frequency
x_unit: Hz
datatype: VECTOR_COMPLEX
permission: READ
group: Signals

[S21]
x_name: Frequency
x_unit: Hz
datatype: VECTOR_COMPLEX
permission: READ
group: Signals

[S12]
x_name: Frequency
x_unit: Hz
datatype: VECTOR_COMPLEX
permission: READ
group: Signals

[S22]
x_name: Frequency
x_unit: Hz
datatype: VECTOR_COMPLEX
permission: READ
group: Signals

[Output enabled]
datatype: BOOLEAN
def_value: False
set_cmd: :OUTP
section: Stimulus
group: Power

[Output power]
datatype: DOUBLE
def_value: -30.0
low_lim: -85.0
high_lim: 10.0
unit: dBm
set_cmd: :SOUR:POW
section: Stimulus
group: Power

[Trigger Mode]
datatype: COMBO
permission: WRITE
combo_def_1: Hold
combo_def_2: Continuous
cmd_def_1: OFF
cmd_def_2: ON
set_cmd: :INIT:CONT
section: Stimulus
group: Trigger

[Trigger Source]
datatype: COMBO
def_value: Internal
combo_def_1: Internal
combo_def_2: External
combo_def_3: Bus
combo_def_4: Manual
cmd_def_1: INT
cmd_def_2: EXT
cmd_def_3: BUS
cmd_def_4: MAN
set_cmd: :TRIG:SOUR
section: Stimulus
group: Trigger

[IF bandwidth]
datatype: DOUBLE
def_value: 10E3
unit: Hz
low_lim: 10
high_lim: 500E3
set_cmd: :SENS:BWID
section: Response
group: Average

[Average]
datatype: BOOLEAN
def_value: False
set_cmd: :SENS:AVER
section: Response
group: Average

[# of averages]
datatype: DOUBLE
def_value: 16
low_lim: 1
high_lim: 999
set_cmd: :SENS:AVER:COUN
section: Response
group: Average

[Averaging Trigger]
datatype: BOOLEAN
def_value: False
set_cmd: :TRIG:AVER
section: Response
group: Average

[Acquire new trace]
datatype: BOOLEAN
def_value: False
group: Acquisition
tooltip: If checked, the driver controls instrument in `Bus Trigger` mode and the measurement is started by the computer. If unchecked, the driver loads the data on the screen of the instrument.

[Range type]
datatype: COMBO
def_value: Start - Stop
combo_def_1: Center - Span
combo_def_2: Start - Stop
permission: NONE
section: Stimulus
group: Sweep Setup

[Start frequency]
datatype: DOUBLE
def_value: 4E9
unit: Hz
set_cmd: :SENS:FREQ:STAR
state_quant: Range type
state_value_1: Start - Stop
section: Stimulus
group: Sweep Setup

[Stop frequency]
datatype: DOUBLE
def_value: 12E9
unit: Hz
set_cmd: :SENS:FREQ:STOP
state_quant: Range type
state_value_1: Start - Stop
section: Stimulus
group: Sweep Setup

[Center frequency]
datatype: DOUBLE
def_value: 8E9
unit: Hz
set_cmd: :SENS:FREQ:CENT
state_quant: Range type
state_value_1: Center - Span
section: Stimulus
group: Sweep Setup

[Span]
datatype: DOUBLE
def_value: 8E9
unit: Hz
set_cmd: :SENS:FREQ:SPAN
state_quant: Range type
state_value_1: Center - Span
section: Stimulus
group: Sweep Setup

[# of points]
datatype: DOUBLE
def_value: 201
low_lim: 2
high_lim: 20001
set_cmd: :SENS:SWE:POIN
section: Stimulus
group: Sweep Setup

[Sweep type]
datatype: COMBO
def_value: Linear
combo_def_1: Linear
combo_def_2: Log
combo_def_3: Lorentzian
section: Stimulus
group: Sweep Setup

[Lorentzian Parameter type]
datatype: COMBO
permission: NONE
combo_def_1: Q - Maximum Angle
combo_def_2: FWHM
group: Sweep Setup
section: Stimulus
state_quant: Sweep type
state_value_1: Lorentzian

[Q Value]
datatype: DOUBLE
def_value: 1.0
group: Sweep Setup
section: Stimulus
state_quant: Lorentzian Parameter type
state_value_1: Q - Maximum Angle
tooltip: Quality factor of the resonance to be measured.

[Maximum Angle]
datatype: DOUBLE
unit: rad
def_value: 0.0
low_lim: 0
high_lim: 1.57079632679
group: Sweep Setup
section: Stimulus
state_quant: Lorentzian Parameter type
state_value_1: Q - Maximum Angle
tooltip: Maximum angle to cover, which determines start/stop frequencies and density of points.

[FWHM linewidth]
datatype: DOUBLE
unit: Hz
def_value: 0.0
low_lim: 0
group: Sweep Setup
section: Stimulus
state_quant: Lorentzian Parameter type
state_value_1: FWHM
tooltip: Full-width half maximum linewidth of the resonance to be measured. The density of points is determined by this together with Span.

[Sweep mode]
datatype: COMBO
def_value: Stepped
combo_def_1: Stepped
combo_def_2: Analog
cmd_def_1: STEP
cmd_def_2: ANAL
set_cmd: :SENS:SWE:GEN
section: Stimulus
group: Sweep Setup
